# CONFIG_SITE

# Make any application-specific changes to the EPICS build
#   configuration variables in this file.
#
# Host/target specific settings can be specified in files named
#   CONFIG_SITE.$(EPICS_HOST_ARCH).Common
#   CONFIG_SITE.Common.$(T_A)
#   CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)

# CHECK_RELEASE controls the consistency checking of the support
#   applications pointed to by the RELEASE* files.
# Normally CHECK_RELEASE should be set to YES.
# Set CHECK_RELEASE to NO to disable checking completely.
# Set CHECK_RELEASE to WARN to perform consistency checking but
#   continue building anyway if conflicts are found.
CHECK_RELEASE = YES

# Set this when you only want to compile this application
#   for a subset of the cross-compiled target architectures
#   that Base is built for.
CROSS_COMPILER_TARGET_ARCHS = linuxRT-x86_64


# To install files into a location other than $(TOP) define
#   INSTALL_LOCATION here.
#INSTALL_LOCATION=</path/name/to/install/top>

# Set this when your IOC and the host use different paths
#   to access the application. This will be needed to boot
#   from a Microsoft FTP server or with some NFS mounts.
# You must rebuild in the iocBoot directory for this to
#   take effect.
#IOCS_APPL_TOP = </IOC/path/to/application/top>
#
# =======================================================
# Let's install our IOC boot products:
# envPaths and st.cmd
# =======================================================
IOCS_APPL_TOP  = $(INSTALL_LOCATION)

INSTALL_LOCATION_STARTUP += $(INSTALL_LOCATION)/startup
DIRECTORY_TARGETS += $(INSTALL_LOCATION_STARTUP)
# =======================================================
CPSW_FRAMEWORK_LIB=$(addsuffix /lib,$(CPSW))
YAML_LIB=$(addsuffix /lib,$(YAML_CPP))

## =============================
## Build Application Statically
## =============================
SHARED_LIBRARIES=YES
STATIC_BUILD=YES

# Note using PACKAGE_SITE_TOP from LCLS for PCDS as well
PACKAGE_SITE_TOP=/afs/slac/g/lcls/package

# =============================
# Define the archiecture versions
# =============================
LINUXRT_BUILDROOT_VERSION=buildroot-2019.08

ifdef T_A
PKG_ARCH=$(T_A)
endif

# ===================================
# Support for external packages
# ===================================

# CPSW
CPSW_FRAMEWORK_PACKAGE_NAME = cpsw/framework
CPSW_FRAMEWORK_VERSION      = R4.4.1
CPSW_FRAMEWORK_TOP          = $(PACKAGE_SITE_TOP)/$(CPSW_FRAMEWORK_PACKAGE_NAME)/$(CPSW_FRAMEWORK_VERSION)
CPSW_FRAMEWORK_LIB          = $(CPSW_FRAMEWORK_TOP)/$(PKG_ARCH)/lib
CPSW_FRAMEWORK_INCLUDE      = $(CPSW_FRAMEWORK_TOP)/$(PKG_ARCH)/include

# YAML-CPP
YAML_PACKAGE_NAME = yaml-cpp
YAML_VERSION      = yaml-cpp-0.5.3_boost-1.64.0
YAML_TOP          = $(PACKAGE_SITE_TOP)/$(YAML_PACKAGE_NAME)/$(YAML_VERSION)
YAML_LIB          = $(YAML_TOP)/$(PKG_ARCH)/lib
YAML_INCLUDE      = $(YAML_TOP)/$(PKG_ARCH)/include

# BOOST
BOOST_PACKAGE_NAME = boost
BOOST_VERSION      = 1.64.0
BOOST_TOP          = $(PACKAGE_SITE_TOP)/$(BOOST_PACKAGE_NAME)/$(BOOST_VERSION)
BOOST_LIB          = $(BOOST_TOP)/$(PKG_ARCH)/lib
BOOST_INCLUDE      = $(BOOST_TOP)/$(PKG_ARCH)/include
